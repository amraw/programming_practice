package DP;

public class coinChange {
public static int findCoinChange(int coinValue[], int n, int size){
	int result = 0;
	if(n < 0)
		return 0;
	else if(n == 0)
		return 1;
	else if(n!=0 && size<0)
		return 0;
	else
	{
		return findCoinChange(coinValue,n-coinValue[size], size)+findCoinChange(coinValue,n-coinValue[size], size-1)+findCoinChange(coinValue,n, size-1);
	}
}

public int max(int a, int b, int c)
{
	return Math.max((Math.max(a,b)),c);
}

public static void main(String []args)
{
	int coinValue[] = new int[]{1,2,3};
	System.out.println("Coin Change Values: "+findCoinChange(coinValue,4,coinValue.length));
}
}
